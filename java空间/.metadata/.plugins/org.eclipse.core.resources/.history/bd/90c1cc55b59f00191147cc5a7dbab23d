import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import javax.swing.border.Border;

public class ChouJiang implements KeyListener{
	
	//窗体中包含的组件
	JFrame frame;
	JTextField tf;
	JTextArea ta1,ta2;
	JButton button1,button2;
	
	public static void main(String arg[]) throws Exception{
		ChouJiang that=new ChouJiang();
		that.go();
	}
	public void go() throws Exception{
		
		//创建并布局
		frame  =new JFrame("用随机数抽取幸运观众");
		tf=new JTextField();
		ta1=new JTextArea(10,15);
		ta2=new JTextArea(12,15);
		button1=new JButton("抽奖");
		button2=new JButton("退出");
		Box box1=Box.createVerticalBox();
		Box box2=Box.createVerticalBox();
		box1.add(tf);
		box1.add(Box.createVerticalStrut(10));
		box1.add(ta1);
		box2.add(Box.createVerticalStrut(110));
		box2.add(button1);
		box2.add(Box.createVerticalStrut(10));
		box2.add(button2);
		Container cp=frame.getContentPane();
		cp.setLayout(new FlowLayout(FlowLayout.CENTER,10,10));
		cp.add(box1);
		cp.add(ta2);
		cp.add(box2);
		Border border=BorderFactory.createEtchedBorder();
		Border border1=BorderFactory.createTitledBorder(border,"请输入名称");
		box1.setBorder(border1);
		
		//显示窗口
		frame.pack();
		frame.setLocation(800,400);
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		//添加相应事件
		tf.addKeyListener(this);
		button1.addActionListener(new Button1Listener());
		button2.addActionListener(new Button2Listener());
		
	}
	
	public class Button1Listener implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			
			String string=ta1.getText(); //获取人员列表文本
			String[] strArray=string.split("\n"); //获得人员数组
			
			//产生随机数组下标
			int index=(int)(Math.random()*strArray.length); 
			
			//打印结果
			String result=strArray[index];
			ta2.setText(result);
		}
		
	}
	
	public class Button2Listener implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			frame.dispose();
		}
		
	}
	
	//编写接口的事件处理函数
	public void keyPressed(KeyEvent e) {
		if(e.getKeyChar()=='\n')
		{
			String name=tf.getText();
			if(name.isEmpty())return;
			ta1.append(name+"\n");
			tf.selectAll();	
		}
	}
	public void keyReleased(KeyEvent e) {}
	public void keyTyped(KeyEvent e) {}
	
}

